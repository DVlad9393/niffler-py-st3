name: CI & Allure Report

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    name: Run Tests (Python 3.13)
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-21-openjdk-amd64
      POETRY_VIRTUALENVS_CREATE: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-3.13-${{ hashFiles('niffler_e_2_e_tests_python/poetry.lock') }}
          restore-keys: |
            poetry-3.13-

      - name: Install dependencies
        working-directory: ./niffler_e_2_e_tests_python
        run: poetry install --no-root

      - name: Build Docker containers
        working-directory: .
        run: |
          chmod +x ./docker-compose-dev.sh
          ./docker-compose-dev.sh

      - name: Run tests with Allure
        working-directory: ./niffler_e_2_e_tests_python
        run: |
          chmod +x ./run_allure.sh
          ./run_allure.sh api --workers auto

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: niffler_e_2_e_tests_python/allure-results

  generate-report:
    name: Generate & Publish Allure Report
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: Generate Allure report
        run: |
          npm install -g allure-commandline --save-dev
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure HTML Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report
          path: allure-report

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages