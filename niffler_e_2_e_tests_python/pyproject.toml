[project]
name = "test_niffler_project"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn[standard] (>=0.34.3,<0.35.0)",
    "email-validator (>=2.2.0,<3.0.0)",
    "fastapi-pagination (>=0.13.1,<0.14.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "sqlmodel (>=0.0.24,<0.0.25)",
    "playwright (>=1.52.0,<2.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "requests (>=2.32.4,<3.0.0)",
    "curlify (>=3.0.0,<4.0.0)",
    "pkce (>=1.0.3,<2.0.0)",
    "jinja2 (>=3.1.6,<4.0.0)",
    "pbreflect (>=1.1.0,<2.0.0)",
    "protobuf (>=6.32.1,<7.0.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
httpx = "^0.28.1"
pydantic = "^2.11.5"
allure-pytest = "^2.14.2"
allure-python-commons = "^2.14.2"
email-validator = "^2.0.1"
python-dotenv = "^1.0.0"
faker = "^37.4.0"
psycopg2-binary = "^2.9.10"
ruff = "^0.12.2"
pre-commit = "^4.2.0"
pytest-xdist = "^3.8.0"
grpcio-tools = "^1.74.0"
confluent-kafka = "^2.11.1"

[tool.poetry]
package-mode = false

[tool.pytest.ini_options]
pythonpath = '.'
minversion = "6.0"
addopts = [
    "--alluredir", "allure-results",
    "--clean-alluredir"
]
markers = [
    "login: tests related to login functionality",
    "spending: tests related to spending",
    "register: tests related to register functionality",
    "categories: tests related to categories",
    "api: tests related to api",
    "grpc: tests related to grpc"]

[tool.ruff]
target-version = "py313"
line-length = 120
exclude = [
    ".venv",
    "build",
    "dist",
    "allure-results",
    ".pytest_cache",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle (ошибки стиля)
    "F",    # pyflakes (ошибки кода)
    "I",    # isort (импорты)
    "B",    # bugbear (потенциальные баги)
    "UP",   # pyupgrade (обновление синтаксиса до нового Python)
    "S",    # bandit (безопасность, если пишешь бекенд)
    "C",    # flake8-comprehensions (компрехеншены)
    "N",    # pep8-naming (названия)
    "D",     # pydocstyle"
    "Q",     # quotes
]

ignore = [
    "E501",     # игнорировать длину строки (если хочется)
    "B008",     # не ругаться на аргументы типа mutable default
    "S101",     # не ругаться на assert
    "S105",     # не ругаться на хардкод пароля в тестах
    "D203",     # incorrect-blank-line-before-class
    "D213",     # multi-line-summary-first-line
    "D104",     # Missing docstring in public package
    "D100",     # Missing docstring in public module
    "D202",     # No blank lines allowed after function docstring
    "D205",     # 1 blank line required between summary line and description
    "D400",     # First line should end with a period
    "N815",     # should not be mixedCase
    "D101",      # Missing docstring in public class
    "D102",      # Missing docstring in public method
    "D103",      # Missing docstring in public function
    "D107",      # Missing docstring in __init__
    "F811",      # redefinition of unused name from line
]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
line-ending = "auto"